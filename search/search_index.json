{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Relevant Documentation for ACCESS Models","text":"<p>This site contains ACCESS model related documentation contributed by the community.</p> <p>Anything contributed to this repository may be re-used in ACCESS-NRI supported documentation, with appropriate acknowledgement.</p> <p>The documentation is distributed under a CC-BY 4.0 license.</p>"},{"location":"LICENSE/","title":"License","text":"<p>All documentation material from the ACCESS-NRI is made available under the Creative Commons Attribution license. The following is a human-readable summary of (and not a substitute for) the full legal text of the CC BY 4.0 license.</p> <p>You are free:</p> <ul> <li>to Share---copy and redistribute the material in any medium or format</li> <li>to Adapt---remix, transform, and build upon the material</li> </ul> <p>for any purpose, even commercially.</p> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p> <p>Under the following terms:</p> <ul> <li>Attribution---You must give appropriate credit (mentioning that   your work is derived from work that is Copyright \u00a9 ACCESS-NRI and, where practical, linking to   https://www.access-nri.org.au, provide a link to the   license, and indicate if changes were made. You may do   so in any reasonable manner, but not in any way that suggests the   licensor endorses you or your use.</li> </ul> <p>No additional restrictions---You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.  With the understanding that:</p> <p>Notices:</p> <ul> <li>You do not have to comply with the license for elements of the   material in the public domain or where your use is permitted by an   applicable exception or limitation.</li> <li>No warranties are given. The license may not give you all of the   permissions necessary for your intended use. For example, other   rights such as publicity, privacy, or moral rights may limit how you   use the material.</li> </ul>"},{"location":"um/","title":"UM-Partner resources","text":"<p>The Unified Model (UM), which is a numerical model of the atmosphere used for both weather and climate applications, has been adopted as the atmospheric model component for the different Australian Community Climate and Earth System Simulator (ACCESS) model suites.</p> <p>This site contains UM-related documentation that is relevant to ACCESS configurations, which has been contributed by the ACCESS community. Supplementary documentation can be found on the ACCESS-Hive portal, which provides links to documentation hosted on other sites.</p> <p>Additionally, there is the ACCESS-Hive Forum which is a space for the ACCESS Community to come together, share information, have fruitful discussions, organise and plan shared activities. This forum is for everyone who is part of the ACCESS Community.</p>"},{"location":"um/getting-started/","title":"Getting Started with ACCESS suites","text":"<p>This section outlines important steps that need to be taken before getting started with tutorials and how-to guides, e.g. NCI and MOSRS accounts, ssh and ssh keys, software setup, etc. </p>"},{"location":"um/getting-started/#uk-met-office-environment-on-nci","title":"UK Met Office Environment on NCI","text":"<p>Installation of the UK Met Office Environment on NCI consists of: the cylc workflow system, rose suites, the Met Office MOSRS repository and our local replica repository as well the model software and tools.  More information on how to setup your account to use this environment can be found on the UK MetOffice Environment on NCI page.</p>"},{"location":"um/getting-started/#met-office","title":"Met Office","text":"<p>More general information on how to apply for a Met Office Science Repository Service (MOSR) account can be found on the Met Office wiki. </p> <p>Note: Additional steps are needed on how to get access to Met Office sharepoint and Yammer.</p>"},{"location":"um/access-tech-info/","title":"ACCESS Model Technical Information","text":"<p>This section includes information from the ACCESS-community, such as descriptions on how the model works and its underlying philosophy. This will help users understand where to go to in order to solve new issues. Some examples include: </p> <ul> <li>Reference the scientific section of the UMDP: https://code.metoffice.gov.uk/doc/um/latest/umdp.html </li> <li>Also descriptions on how cylc runs a model, etc. </li> <li>Links to scientific documentation and link to Papers that describe the science in the models. </li> </ul>"},{"location":"um/access-tech-info/access-climate-suite-structure/","title":"ACCESS Climate Suite Structure","text":""},{"location":"um/access-tech-info/access-climate-suite-structure/#met-office-releases","title":"Met Office Releases:","text":""},{"location":"um/access-tech-info/access-climate-suite-structure/#um-updates","title":"UM Updates","text":""},{"location":"um/access-tech-info/access-climate-suite-structure/#installing-new-um-versions-on-gadi","title":"Installing new UM versions on Gadi","text":"<p>See also NCI section in MOSRS UM Standard Test Apps within UM rose stem page.</p> <p>For a top-level list of use cases and links to documentation about building and managing ACCESS UM executables, see related Building and Managing UM Executables page.</p>"},{"location":"um/access-tech-info/access-climate-suite-structure/#jules-updates","title":"JULES Updates","text":""},{"location":"um/access-tech-info/access-climate-suite-structure/#gcom-updates","title":"GCOM Updates","text":""},{"location":"um/access-tech-info/access-climate-suite-structure/#building-gcom-from-shared-repository","title":"Building GCOM from shared repository","text":"<p>GCOM is an MPI wrapper library that the UM uses.</p>"},{"location":"um/access-tech-info/access-climate-suite-structure/#gcom-52","title":"GCOM 5.2","text":""},{"location":"um/access-tech-info/access-configs/","title":"ACCESS Model Configurations","text":""},{"location":"um/access-tech-info/access-configs/#access-cm2","title":"ACCESS-CM2","text":"<p>ACCESS-CM2 comprises: </p> <ul> <li> <p>Atmosphere model (UM10.6): N96 resolution (1.875\u00b0 x 1.25\u00b0, 85 levels). Physical model only \u2013 no carbon cycle.</p> </li> <li> <p>Land surface model (CABLE2.5) </p> </li> <li> <p>Ocean model (MOM5): Tripolar grid, 1\u00b0 resolution, 50 levels.</p> </li> <li> <p>Sea ice model (CICE5.1) </p> COMPONENT MODEL VERSION Atmosphere UM 10.6 Land Surface CABLE 2.5 (integrated in UM) Ocean MOM 5 Sea Ice CICE 5.1 Coupler OASIS-MCT 3 </li> </ul> <p>Experiments</p> <p>ACCESS-CM2 suites for CMIP6 Scenarios are listed on the CSIRO's CMIP6 archive. </p> <ul> <li>Portable ACCESS-CM2 CMIP6 suites available to the ACCESS community include: </li> </ul> EXPERIMENT SUITE Pre-industrial Control Br-565"},{"location":"um/access-tech-info/access-configs/#access-esm15","title":"ACCESS-ESM1.5","text":"<p>ACCESS-ESM1.5 comprises:</p> <ul> <li> <p>Atmosphere model (UM7.3): N96 resolution (1.875\u00b0 x 1.25\u00b0, 38 levels). </p> </li> <li> <p>Land surface model (CABLE2.4): same horizontal resolution as atmosphere (1.875\u00b0 x 1.25\u00b0).</p> </li> <li> <p>Ocean model (MOM5): 1\u00b0 resolution, 50 levels.</p> COMPONENT MODEL VERSION Atmosphere UM 7.3 Land Surface CABLE 2.4 (integrated in UM) Ocean MOM 5 Sea Ice CICE 4.1 Coupler OASIS-MCT 3 </li> </ul> <p>Experiments</p> <ul> <li> <p>Standard ACCESS-ESM1.5 CMIP6 Scenarios include:</p> Experiment Control Link PIcontrol Payu \u200bhttps://github.com/coecms/esm-pre-industrial Abrupt4xCO2 1pctCO2 Historical Payu \u200bhttps://github.com/coecms/esm-historical AMIP </li> </ul> <p>Payu is a workflow management tool for running climate models in supercomputing environments. </p> <p>PMIP4 </p>"},{"location":"um/access-tech-info/ancillary-files/","title":"Ancillary Files","text":"<p>This serves as an index page for various information on ancillary files.</p> <p>Ancillary files are the mechanism by which external data sources are entered into the Unified Model (UM). This includes model orography, soil and vegetation types, climatologies for sea surface temperature and sea ice.</p>"},{"location":"um/access-tech-info/ancillary-files/#purpose-of-ancillary-files","title":"Purpose of Ancillary Files","text":"<p>UMDP 70 Ancillary File Data Sources</p> <p>UMDP 73 Ancillary File Creation</p>"},{"location":"um/access-tech-info/ancillary-files/#ancillary-files-at-nci","title":"Ancillary Files at NCI","text":"<p>Rose stem suites expect ancillary files to be in ...</p>"},{"location":"um/access-tech-info/ancillary-files/#ancillary-generation-code","title":"Ancillary Generation Code","text":"<p>Code repository, trac, documentation, e.g ANCIL</p>"},{"location":"um/access-tech-info/ancillary-files/#suites-for-ancillary-files","title":"Suites for Ancillary Files","text":""},{"location":"um/access-tech-info/ancillary-files/#access-grid-namelists","title":"ACCESS Grid Namelists","text":""},{"location":"um/access-tech-info/ancillary-files/#various-issues","title":"Various Issues","text":""},{"location":"um/access-tech-info/ancillary-files/#orography-source-data-problems","title":"Orography source data problems","text":""},{"location":"um/access-tech-info/ancillary-files/#high-resolution-australian-orography","title":"High Resolution Australian Orography","text":"<p>The Met Office ancillary file generation package includes the GLOBE30 orography dataset. This has 30 second or approximately 1 km resolution. The orography ancillaries for APS0 were generated from the GLOBE1 1 minute resolution dataset which is all we had at the time. The Met Office documentation now calls this an interim resolution that's discouraged. A quick comparison suggests it's close to a simple average of the 30 minute data.  For more information see Martin Dix's post.</p>"},{"location":"um/access-tech-info/ancillary-files/#mask-issues","title":"Mask issues","text":""},{"location":"um/access-tech-info/ancillary-files/#various-python-utilities","title":"Various python utilities","text":""},{"location":"um/access-tech-info/ancillary-files/#examples","title":"Examples","text":"<p>The following info needs updating! There are ancillary files at a number of standard resolutions in the directories <code>vayu:/data/projects/access/ancil and cherax:~access/umdir/vn6.3/ancil/atmos</code>.</p> <p>Some of these also have a version with a <code>_360 suffix</code> to denote use of a 360 day calendar which is used by the climate model. Note that all the ancillary files contain information about the calendar in their header and the model will complain if the wrong one is used. E.g. there are different mask files in n96 and n96_360 (even though they differ by only a single byte in the header the model won't run if the wrong one is used).</p> <p>Note that we can not reproduce these files exactly because they were generated with the <code>US Navy 10'</code> orographic dataset which has now been deprecated in favour of the GLOBE orography.</p> <p>There is also an <code>n96_hadgem1</code> subdirectory. This has a different land mask to the standard N96 case (generated outside the normal ancillary file framework according to Clive).</p>"},{"location":"um/access-tech-info/ancillary-files/#high-resolution-data-sets","title":"High resolution data sets","text":""},{"location":"um/access-tech-info/ancillary-files/#grid-namelists","title":"Grid namelists","text":""},{"location":"um/access-tech-info/ancillary-files/#generating-ancillary-files","title":"Generating ancillary files","text":"<p>1. Land Sea Mask</p> <p>2. Orography</p> <p>3. Vegetation and Soil</p> <p>4. Soil moisture</p> <p>5. Vegetation Fractions</p> <p>6. Ozone</p>"},{"location":"um/access-tech-info/ancillary-files/#resource-requirements-on-solar","title":"Resource requirements on solar","text":"<p>On solar, generating an N96 mask takes about 240 sec and needs a memory limit of about 1 GB.</p>"},{"location":"um/access-tech-info/install-um-release/","title":"Installing a new Met Office release of the UM or JULES on gadi","text":""},{"location":"um/access-tech-info/install-um-release/#um","title":"UM","text":"<p>Example here is installing <code>vn13.2</code>.</p> <p>UM rose stem uses inputs from <code>~access/umdir/standard_jobs/inputs</code>. These are mirrored from JASMIN. However in practice they rarely change so copy the latest directory to the new version and then link back (this matches the structure on JASMIN). E.g.</p> <pre><code>cd ~access/umdir/standard_jobs/inputs\nmv vn13.1 vn13.2\nln -s vn13.2 vn13.1\n</code></pre> <p>To build the new KGOs and create files for <code>~access/umdir/vnX.Y</code>, on <code>accessdev</code> <pre><code>fcm co fcm:um.xm_tr um_trunk\ncd um_trunk\nrose stem --group=nci --group=install\n</code></pre> All the <code>rose-ana</code> tasks will fail because of the missing KGOs. These have to be allowed to run so that the <code>kgo_update</code> script to be used next can get filenames.</p> <p>Copy <code>admin/rose-stem/kgo_update/kgo_update.py</code> to <code>gadi</code> and then on <code>gadi</code> <pre><code>python2 kgo_update.py -S um_trunk -U $USER --new-release --non-interactive\ncp ~/cylc-run/um_trunk/work/1/atmos-gadi_intel_um_drhook_safe_omp-n48-1x2-noios-2t/drhook.prof.1 /g/data/access/KGO/standard_jobs/ifort20/gadi_intel_um_drhook_safe_n48/vn13.2/drhook.prof.1  # Not created by kgo_update\ncp -r ~/cylc-run/um_trunk/share/vn13.2/ ~access/umdir\nchgrp -R access.admin  ~access/umdir/vn13.2\n</code></pre> Rerun the failed rose-ana tasks on <code>accessdev</code>. These should now all succeed. <pre><code>cylc reset um_trunk -s waiting 'rose_ana*:failed'\n</code></pre></p> <p>To test the installation, upgrade the suite <code>u-aa124</code> to the latest version and run. <pre><code>cd app/um\nrose app-upgrade vn13.2\ncd ../fcm_make\nrose app-upgrade vn13.2\n</code></pre> Update the GCOM module version in <code>suite.rc</code> and <code>VN</code> in <code>rose-suite.conf</code>.</p>"},{"location":"um/access-tech-info/install-um-release/#gcom","title":"GCOM","text":"<p>GCOM is an MPI wrapper library used by the UM. The GCOM library is built using <code>rose-stem</code>. This is set to build the library with both the Intel compiler ifort and with gfortran (the UM has been tested at NCI with gfortran but those tests aren't part of the trunk yet).</p> <p>On <code>accessdev</code>, <pre><code>fcm co fcm:gcom.xm_tr gcom_trunk\n</code></pre> <code>rose stem/site/nci/suite.rc</code> has <pre><code>{%- set MPI_VERSION = MPI_VERSION | default(\"openmpi/4.1.3\") %}\n</code></pre> The UM rose-stem tests are still using (as at vn13.2) <code>openmpi/4.0.2</code>, so this should be overridden on the command line <pre><code>rose-stem --group=all -S MPI_VERSION=\\'openmpi/4.0.2\\'\n</code></pre> This also works with <code>intel-mpi</code>.</p> <p>When the rose stem tests are complete, create new modules for the MPI and serial versions of the library <code>~access/modules/gcom</code>. Naming convention is to append the openmpi version, e.g. for GCOM <code>vn8.0</code> <pre><code>8.0_ompi.4.0.2\n8.0_serial\n</code></pre> Then in <code>~access/apps/gcom</code> (for example) <pre><code>mkdir 8.0_ompi.4.0.2\ncd 8.0_ompi.4.0.2\ncp -r ~/cylc-run/gcom_trunk/share/nci_gadi_ifort_mpp/build/include .\ncp -r ~/cylc-run/gcom_trunk/share/nci_gadi_ifort_mpp/build/lib .\nchgrp -R access.admin ~access/apps/gcom/8.0_ompi.4.0.2\n</code></pre> and similarly for the serial library.</p> <p>Note that in the GCOM rose stem tests the <code>abort</code> tests are expected to fail and this is checked before the suite completes.</p>"},{"location":"um/access-tech-info/install-um-release/#jules","title":"JULES","text":"<p>To update the JULES rose-stem KGOs for a new release</p> <p>Check out JULES trunk on <code>accessdev</code> <pre><code>fcm co fcm:jules.xm_tr jules_trunk\ncd jules_trunk\nrose stem --group=all\n</code></pre> All the comparison tasks will fail because the new KGO directory isn't there so use the cylc GUI to hold the <code>KGO_CHECK</code> group or from the command line <pre><code>cylc hold jules_trunk 'nccmp*'\n</code></pre> After all the tests have run, on <code>gadi</code> (assuming new release is <code>vn7.2</code>) <pre><code>mkdir /g/data/access/jules/rose-stem-kgo/vn7.2\ncp ~/cylc-run/jules_trunk/work/1/*/output/*.nc  /g/data/access/jules/rose-stem-kgo/vn7.2\nchgrp -R access.admin /g/data/access/jules/rose-stem-kgo/vn7.2\n</code></pre></p> <p>Back on <code>accessdev</code>, release the comparison tasks which should now all succeed <pre><code>cylc release jules_trunk 'nccmp*'\n</code></pre></p>"},{"location":"um/access-tech-info/model-input-and-forcing/","title":"Model Inputs and Forcings","text":""},{"location":"um/access-tech-info/model-input-and-forcing/#model-inputs","title":"Model inputs","text":"<p>List of all the input files, explanation of what they are and where they come from</p>"},{"location":"um/access-tech-info/model-input-and-forcing/#forcing","title":"Forcing","text":""},{"location":"um/access-tech-info/rose-stem/","title":"Rose stem","text":""},{"location":"um/access-tech-info/rose-stem/#overview","title":"Overview","text":"<p>The UM, JULES and LFRic all use rose stem for testing and as part of the ticket approval process (e.g., UM working practices). There are NCI build and test configurations in all these.</p> <p>The UM and JULES compare results to \"known good output\" files on disk whereas LFRic uses checksums (currently in the repository).</p> <p>UM files are in <code>/g/data/access/KGO/standard_jobs/ifort20</code> and JULES in <code>/g/data/access/jules/rose-stem-kgo</code>. These need to be updated for new model releases and also when code changes between releases change results. This is rare with JULES but common with UM. The UM has an update script to make updating files simply but JULES does not.</p>"},{"location":"um/access-tech-info/rose-stem/#um","title":"UM","text":"<p>For a description of the structure of the UM rose stem suite see UM rose stem intro.</p> <p>The NCI configuration has two main groups, <code>nightly</code> and <code>weekly</code> (equivalent to <code>nci</code>), defined in <code>rose-stem/site/nci/groups.rc</code>.  These include a subset of the tests that the Met Office run, UM rose stem standard jobs.</p> <p>THe NCI <code>developer</code> group is quite sparse, so our convention has been to run the full <code>nci</code> group as part of the ticket approval process.</p>"},{"location":"um/access-tech-info/rose-stem/#updating-kgos","title":"Updating KGOs","text":"<p>The NCI configuration follows the Met Office definitions for the KGO variables for each test, see variables.rc</p> <p>For a new release see new UM release.</p> <p>For a change between releases these may be updated as part of the Met Office commit process. Some times we may be advised on potential changes in advance, but more commonly we just see that <code>rose-ana</code> tasks have failed. The useful message is actually in <code>job.out</code> rather than <code>job.err</code>.</p> <p>The same <code>kgo_update.py</code> script used for new releases can be used to update the KGOs for the ticket. <pre><code>python2 kgo_update.py -S um_trunk -U $USER --non-interactive\n</code></pre></p>"},{"location":"um/access-tech-info/rose-stem/#jules","title":"JULES","text":"<p>For a new release see new JULES release.</p>"},{"location":"um/access-tech-info/rose-stem/#lfric","title":"LFRic","text":"<p>Run by BOM from gitlab?</p>"},{"location":"um/access-tech-info/sci-references/","title":"Scientific References","text":"<p>Unified Model Documentation Papers (UMDPs)</p>"},{"location":"um/glossary/","title":"Glossary","text":"<p>A compilation of common terms and acronyms used by the ACCESS community can be found on the ACCESS-Hive Glossary page.</p>"},{"location":"um/how-to/","title":"How-to Guides","text":"<p>This section contains various How-to guides specific to running ACCESS model suites. This is where a user of the models will go to in order to find out how to achieve a specific goal and, hence, is likely to expand over time as we gather more and more examples on what people want to do. </p> <p>Initial ideas include: </p> <ul> <li>How to change the time frame? </li> <li>How to add new diagnostics? </li> <li>How to change the ancillary files? </li> </ul>"},{"location":"um/how-to/how-to-add-new-diagnostics/","title":"How to Add New Diagnostics","text":""},{"location":"um/how-to/how-to-change-ancillary-files/","title":"How to Modify Ancillary files","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#creating-ancillary-files-from-netcdf","title":"Creating ancillary files from netcdf","text":"<p>Needs updating!</p>"},{"location":"um/how-to/how-to-change-ancillary-files/#ancillary-file-modification","title":"Ancillary file modification","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#how-to-edit-land-sea-masks","title":"How to edit land sea masks","text":"<p>mask_edit.py is a GUI editor for land-sea masks, allowing flipping selected points from land to sea or vice-versa. Creates a list of changes that can be used by the CAP.</p> <p>For more details see AncillaryFileModification.</p>"},{"location":"um/how-to/how-to-change-ancillary-files/#getting-the-number-of-land-points-from-a-mask-file","title":"Getting the number of land points from a mask file","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#extract-a-sub-region-from-an-ancillary-file","title":"Extract a sub-region from an ancillary file","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#extract-or-remove-selected-fields-from-a-pp-file","title":"Extract or remove selected fields from a PP file","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#change-an-ancillary-file-calendar","title":"Change an ancillary file calendar","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#change-the-stash-code-of-a-selected-field","title":"Change the stash code of a selected field","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#dump-header-and-field-information","title":"Dump header and field information","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#change-date-in-a-dump-file","title":"Change date in a dump file","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#interpolate-ancillary-file-to-a-different-grid","title":"Interpolate ancillary file to a different grid","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#merge-files","title":"Merge files","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#merge-a-subregion","title":"Merge a subregion","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#alter-values-of-a-particular-field","title":"Alter values of a particular field","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#how-to-convert-to-netcdf","title":"How to convert to netCDF","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#climate-model-output","title":"Climate model output","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#um-timeseries-output","title":"UM timeseries output","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#variable-grid-model","title":"Variable grid model","text":""},{"location":"um/how-to/how-to-change-ancillary-files/#modules","title":"Modules","text":"<p>um_fileheaders.py Field names of all the headers in a UM file. From \u200bhttps://access-svn.nci.org.au/trac/um/browser/trunk/src/utility/qxreconf/rcf_headaddress_mod.F90. Subtracted 1 from all values so they work with python arrays.</p> <p>umfile.py Defines a class with routines for reading and writing UM files. Used by almost everything else. Works with big and little endian, 32 and 64 bit files.</p> <p>stashvar.py Dictionary with UM STASH variable names indexed by section and item numbers (taken from STASHmaster file). Where available CF standard names and CMIP5 short names are also included.</p> <p>levelheights.py Calculate true heights of model levels above sea-level, depending on orography</p> <p>eqtoll.py Rotated grid calculations</p>"},{"location":"um/how-to/how-to-change-time-frame/","title":"How to Change the Time Frame","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/","title":"How to Modify Ancillary Files","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#creating-ancillary-files-from-netcdf","title":"Creating ancillary files from netcdf","text":"<p>Needs updating!</p>"},{"location":"um/how-to/how-to-modify-ancillary-files/#ancillary-file-modification","title":"Ancillary file modification","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#editing-land-sea-masks","title":"Editing land sea masks","text":"<p>mask_edit.py is a GUI editor for land-sea masks, allowing flipping selected points from land to sea or vice-versa. Creates a list of changes that can be used by the CAP.</p> <p>For more details see AncillaryFileModification.</p>"},{"location":"um/how-to/how-to-modify-ancillary-files/#getting-the-number-of-land-points-from-a-mask-file","title":"Getting the number of land points from a mask file","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#extract-a-sub-region-from-an-ancillary-file","title":"Extract a sub-region from an ancillary file","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#extract-or-remove-selected-fields-from-a-pp-file","title":"Extract or remove selected fields from a PP file","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#change-an-ancillary-file-calendar","title":"Change an ancillary file calendar","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#change-the-stash-code-of-a-selected-field","title":"Change the stash code of a selected field","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#dump-header-and-field-information","title":"Dump header and field information","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#change-date-in-a-dump-file","title":"Change date in a dump file","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#interpolate-ancillary-file-to-a-different-grid","title":"Interpolate ancillary file to a different grid","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#merge-files","title":"Merge files","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#merge-a-subregion","title":"Merge a subregion","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#alter-values-of-a-particular-field","title":"Alter values of a particular field","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#converting-to-netcdf","title":"Converting to netCDF","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#climate-model-output","title":"Climate model output","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#um-timeseries-output","title":"UM timeseries output","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#variable-grid-model","title":"Variable grid model","text":""},{"location":"um/how-to/how-to-modify-ancillary-files/#modules","title":"Modules","text":"<p>um_fileheaders.py Field names of all the headers in a UM file. From \u200bhttps://access-svn.nci.org.au/trac/um/browser/trunk/src/utility/qxreconf/rcf_headaddress_mod.F90. Subtracted 1 from all values so they work with python arrays.</p> <p>umfile.py Defines a class with routines for reading and writing UM files. Used by almost everything else. Works with big and little endian, 32 and 64 bit files.</p> <p>stashvar.py Dictionary with UM STASH variable names indexed by section and item numbers (taken from STASHmaster file). Where available CF standard names and CMIP5 short names are also included.</p> <p>levelheights.py Calculate true heights of model levels above sea-level, depending on orography</p> <p>eqtoll.py Rotated grid calculations</p>"},{"location":"um/how-to/how-to-troubleshoot/","title":"How to Troubleshoot Problems","text":""},{"location":"um/how-to/how-to-troubleshoot/#system-and-mpi-related-problems","title":"System and MPI-related Problems","text":""},{"location":"um/how-to/how-to-troubleshoot/#configuration-problems","title":"Configuration Problems","text":""},{"location":"um/how-to/how-to-troubleshoot/#model-instability-problems","title":"Model Instability Problems","text":""},{"location":"um/how-to/how-to-troubleshoot/#common-problems","title":"Common Problems","text":"<p>The MetOffice has collated common failure points when using the UM that cause consternation as often it is difficult to know what is actually causing the failure!</p>"},{"location":"um/references/","title":"Technical References","text":"<p>This section contains technical parts of the documentation and an extensive glossary.</p> <p>External Resources that we might point to include:</p> <ul> <li>Official UM documentation:  UMDP (technical part)</li> <li>Rose and Cylc documentation </li> </ul>"},{"location":"um/references/rose-cylc-doc/","title":"Rose and Cylc Documentation","text":""},{"location":"um/references/rose-cylc-doc/#rose","title":"Rose","text":"<p>Rose documentation</p>"},{"location":"um/references/rose-cylc-doc/#cylc","title":"Cylc","text":"<p>Cylc documentation</p> <p>At NCI, they are currently using cylc 7. Although cylc 8 has recently been released, it is awiting proper installation at NCI.\u00a0</p>"},{"location":"um/references/scitools/","title":"Scientific Tools Documentation","text":""},{"location":"um/references/scitools/#iris","title":"Iris","text":"<p>Iris is an open source Python library for analysing and visualising meteorological and oceanographic data sets, initially developed at the Met Office. </p> <p>Useful links: </p> <ul> <li>Documentation </li> <li>Source code repository </li> <li>Iris Q&amp;A forum</li> <li>Iris Discussion forum</li> </ul> <p>Iris uses \u200bmatplotlib for graphics and \u200bcartopy (also from the Met Office) for mapping (replacing \u200bbasemap). </p>"},{"location":"um/references/scitools/#nci-implementation-of-the-um-rose-stem-tests","title":"NCI implementation of the UM rose stem tests","text":"<p>Since vn10.0 there have been NCI versions of some of the UM rose stem tests, e.g. \u200bhttps://code.metoffice.gov.uk/trac/um/wiki/StandardJobs. These tests all use identical configurations to the Met Office tests except that for some of the N48 tests small processor decompositions like 2x2 have been converted to use a full node.</p>"},{"location":"um/references/scitools/#running-the-tests","title":"Running the tests","text":""},{"location":"um/references/scitools/#compiler-and-mpi-versions","title":"Compiler and MPI versions","text":""},{"location":"um/references/scitools/#automated-testing","title":"Automated testing","text":""},{"location":"um/references/scitools/#management","title":"Management","text":""},{"location":"um/references/um-documentation/","title":"Unified Model (UM) Documentation","text":"<p>The Unified Model (UM), which is a numerical model of the atmosphere used for both weather and climate applications, is used as the atmospheric model component for the ACCESS suites.</p>"},{"location":"um/references/um-documentation/#status-of-access-implementation-of-um-versions","title":"Status of ACCESS implementation of UM versions","text":"<p>Newest version at the top</p> <p>UM vn13.1</p> <p>UM vn13.0 ...</p>"},{"location":"um/references/um-documentation/#building-and-managing-access-um-executables","title":"Building and Managing ACCESS UM Executables","text":""},{"location":"um/references/um-documentation/#access-nwp-build-documentation","title":"Access NWP Build Documentation","text":""},{"location":"um/references/um-documentation/#using-prebuilds","title":"Using Prebuilds","text":""},{"location":"um/references/um-documentation/#interactive-debugging","title":"Interactive debugging","text":""},{"location":"um/tutorials/","title":"Tutorials","text":"<p>The aim of learning-oriented tutorials is to show what the model can do and how to use it. In this section, there should be few, very specific use cases that the learner is expected to follow step by step. There were a few examples of this at the UM User\u2019s workshop in Feb 2023 which could be used as the basis for this section. </p> <p>Each tutorial should have a precise path: </p> <ol> <li>Copy out the (specifically prepared) suite x.</li> <li>Make some specific changes, e.g. to the model time, add another diagnostic, etc. </li> <li>Let it run (should be a cheap model, i.e. low resolution, short time frame). </li> <li>Look at the output. </li> </ol> <p>Since the suite should be specifically designed for this task, the instructions should be verbose and specific. </p> <p>Here is a link to the content in the UM User Tutorial that was held from 06-10 February 2023, at the Bureau of Meteorology in Melbourne.</p>"},{"location":"um/tutorials/climate-suite-tut/","title":"Tutorial: Running a Climate Suite","text":"<p>A climate modelling tutorial was part of the UM Tutorial 2023 in Melbourne. </p>"},{"location":"um/tutorials/regional-suite-tut/","title":"Tutorial: Running a Regional Suite","text":"<p>A Regional Ancillary Suite (RAS) and Regional Nesting Suite (RNS) were part of the UM Tutorial 2023 in Melbourne. </p>"},{"location":"um/tutorials/run-suite-tut/","title":"Tutorial: Running a Standard Suite","text":"<p>The UM is used in global, limited-area, and climate configurations. This tutorial will demonstrate how to run the UM through Rose by running a standard suite with standard science settings. To demonstrate how to run the UM through Rose we will start by running a standard suite.</p>"},{"location":"um/um-partner-resources/","title":"UM Partnershop Resources","text":"<p>The Unified Model Partnership consists of 10 operational and research centres who use and develop the Unified Model and Next Generation Modelling Systems.</p> <p>The MetOffice has an external SharePoint site with information and resources for workshops, events, training and more.</p>"},{"location":"um/um-partner-resources/gmed/","title":"Global Model Evaluation and Development (GMED)","text":"<p>The Global Model Evaluation and Development group develops the global model, which is used across all timescales from Weather, Seasonal to Climate forecasting.</p>"},{"location":"um/um-partner-resources/lfric/","title":"LFRic Project","text":"<p>LFRic is the name given to the programme of work to deliver the software infrastructure and environment to support the development of a replacement for the Unified Model. The name LFRic is chosen in recognition of Lewis Fry Richardson who fantasised parallel computation of weather about a century ago.</p>"},{"location":"um/um-partner-resources/rmed/","title":"Regional Model Evaluation and Development (RMED)","text":"<p>The Regional Model Evaluation and Development group documents the evaluation and development of Regional Atmosphere and Land (RAL) configurations of the \u200bUnified Model. The RAL evaluation and development is a shared activity of the UM Partnership. More information on the latest science configuration of the regional model RAL3 can be found on the RAL3 page.</p>"},{"location":"um/um-partner-resources/rmed/#rmed-convection-working-group","title":"RMED Convection Working Group","text":"<p>This \u200bRMED Convection Working Group aims to improve the convection in RA configurations.</p>"},{"location":"um/um-partner-resources/rmed/#additional-information","title":"Additional Information","text":"<p>Further information, including links to past workshops and presentations of the RMED group, can be found on the Met Office sharepoint.</p>"}]}